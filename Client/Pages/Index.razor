@page "/"
@inject NavigationManager NavigationManager
@using Microsoft.AspNetCore.SignalR.Client
@using OnlineCheckers.Shared

@if (inGame)
{
    <CheckersBoard HubConnection="@hubConnection" GameId="@gameId" IsWhitePlayer="@isWhitePlayer"/>
}
else
{
    if (queued)
    {
        <h2>Waiting for a worthy opponent...</h2>
    }
    else
    {
        <button @onclick="CreateGame">Create Game</button>
    }
}

@code{
    private HubConnection? hubConnection;
    bool inGame = false;
    bool queued = false;
    string gameId = "";
    bool isWhitePlayer = true;



    protected override async Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder()
            .WithUrl(NavigationManager.ToAbsoluteUri(SharedConstants.MULTIPLAYER_HUB_PATTERN_CONNECT).ToString())
            .Build();

        hubConnection.On(SharedConstants.MULTIPLAYER_HUB_GAME_STARTED, (Game args) =>
        {
            Console.WriteLine("Found an opponent and now game is starting");
            isWhitePlayer = hubConnection.ConnectionId == args.WhitePlayerId;
            gameId = args.GameId;
            inGame = true;
            StateHasChanged();
        });
    }

    async Task CreateGame()
    {
        await hubConnection.StartAsync();
        await hubConnection.SendAsync(SharedConstants.MULTIPLAYER_HUB_METHOD_JOIN_GAME);
        queued = true;
    }
}