@page "/"
@inject NavigationManager NavigationManager
@using Microsoft.AspNetCore.SignalR.Client
@using OnlineCheckers.Client.Data
@using OnlineCheckers.Shared

<div class="center">
    🙾 Online Checkers 🙿
</div>
@if (inGame)
{
    <CheckersBoard HubConnection="@hubConnection" GameId="@gameId" IsWhitePlayer="@isWhitePlayer"/>
}
else
{
    if (queued)
    {
        <div class="center">
            <WaitingForOpponent></WaitingForOpponent>
        </div>
    }
    else
    {
        <div class="center">
            <div class="content">
                <img class="checkers-image" src="assets/checkers.png" />
            </div>
            <div class="content">
                <button class="my-button" @onclick="PlayGame">Play Now</button>
            </div>
            <div class="content">
                <h5>Online players: @playerCount</h5>
            </div>
        </div>
    }
}

@code{
    [Inject]
    public IOnlineCheckersService OnlineCheckersService { get; set; }
    private HubConnection? hubConnection;
    bool inGame = false;
    bool queued = false;
    string gameId = "";
    bool isWhitePlayer = true;
    int playerCount = 0;


    protected override async Task OnInitializedAsync()
    {
        try
        {
            playerCount = await OnlineCheckersService.GetPlayerCount();
        }
        catch(Exception ex)
        {
            Console.WriteLine(ex.ToString());    
        }

        hubConnection = new HubConnectionBuilder()
            .WithUrl(NavigationManager.ToAbsoluteUri(SharedConstants.MULTIPLAYER_HUB_PATTERN_CONNECT).ToString())
            .Build();

        hubConnection.On(SharedConstants.MULTIPLAYER_HUB_GAME_STARTED, (Game args) =>
        {
            isWhitePlayer = hubConnection.ConnectionId == args.WhitePlayerId;
            gameId = args.GameId;
            inGame = true;
            StateHasChanged();
        });
    }

    async Task PlayGame()
    {
        await hubConnection.StartAsync();
        await hubConnection.SendAsync(SharedConstants.MULTIPLAYER_HUB_METHOD_JOIN_GAME);
        queued = true;
    }
}